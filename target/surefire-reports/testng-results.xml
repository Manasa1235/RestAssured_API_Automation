<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="17" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-06T16:53:08 CEST" name="Cucumber API Suite" finished-at="2025-08-06T16:54:04 CEST" duration-ms="56577">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-08-06T16:53:08 CEST" name="Cucumber API Tests" finished-at="2025-08-06T16:54:04 CEST" duration-ms="56577">
      <class name="runners.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:08 CEST" name="setUpClass" finished-at="2025-08-06T16:53:09 CEST" duration-ms="1684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@58701e8c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:09 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:18 CEST" duration-ms="8861" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Successfully delete existing booking"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["DELETE API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:18 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:21 CEST" duration-ms="2330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Delete non-existent booking"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["DELETE API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:21 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:23 CEST" duration-ms="2760" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Delete booking without authentication"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["DELETE API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:23 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:26 CEST" duration-ms="2505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retrieve all booking IDs without filters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GET API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:26 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:28 CEST" duration-ms="1997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retrieve bookings with individual filter "firstname"="Sally""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GET API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:28 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:29 CEST" duration-ms="1672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retrieve bookings with individual filter "lastname"="Brown""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GET API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:29 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:32 CEST" duration-ms="2119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retrieve bookings with individual filter "checkin"="2024-01-01""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GET API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:32 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:34 CEST" duration-ms="2235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retrieve bookings with individual filter "checkout"="2024-12-31""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GET API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:34 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:36 CEST" duration-ms="2085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Retrieve bookings with combined filters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GET API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:36 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:38 CEST" duration-ms="2217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate error handling for invalid date format"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GET API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:38 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:40 CEST" duration-ms="2313" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate error handling for invalid parameter value"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GET API Tests"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <500>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <500>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor246.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at stepdefs.GetBookingStepDefs.booking_response_status_should_be_one_of(GetBookingStepDefs.java:60)
at ✽.Booking response status should be 400 or 500(file:///E:/Manasa/Interview/Selenium_Java_Automation/Eneco_API_Automation/project-root/src/test/resources/features/GetBooking.feature:37)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:40 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:43 CEST" duration-ms="2325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify response time is less than 2 seconds"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["GET API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:43 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:45 CEST" duration-ms="2655" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Partial update - single field (firstname)"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["PATCH API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:45 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:48 CEST" duration-ms="2966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Partial update - multiple fields"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["PATCH API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:48 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:52 CEST" duration-ms="3581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Partial update - nested object (bookingdates)"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["PATCH API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:52 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:54 CEST" duration-ms="2045" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Invalid booking ID error handling"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["PATCH API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:54 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:53:57 CEST" duration-ms="2853" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Invalid data type error handling"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["PATCH API Tests"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code (<400> or <500>) but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code (<400> or <500>) but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor246.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:84)
at stepdefs.GetBookingStepDefs.booking_response_status_should_be_one_of(GetBookingStepDefs.java:60)
at ✽.Booking response status should be 400 or 500(file:///E:/Manasa/Interview/Selenium_Java_Automation/Eneco_API_Automation/project-root/src/test/resources/features/PatchBooking.feature:38)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:53:57 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:54:00 CEST" duration-ms="3170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Missing authentication"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["PATCH API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:54:00 CEST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-08-06T16:54:04 CEST" duration-ms="3989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify idempotency of updates"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["PATCH API Tests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.TestRunner@7f0eb4b4]" started-at="2025-08-06T16:54:04 CEST" name="tearDownClass" finished-at="2025-08-06T16:54:04 CEST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.TestRunner -->
    </test> <!-- Cucumber API Tests -->
  </suite> <!-- Cucumber API Suite -->
</testng-results>
